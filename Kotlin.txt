Variables
	Anatomia de la declaración de una variables
	Inferencia de tipos
	Variables var y val
	Tipos de datos
	Bytecode de kotlin
Condicionales
	When
		Uso como ciclo de control
		Uso como expresión
			Uso extensivo
Rangos
	Uso del in
	Uso del downTo
	Uso del until
Etiquetas en Strings
	Uso del $
	Uso del ${}
Funciones
	Anatomia de la declaración de una función
	Modificadores de acceso
	Argumentos predefinidos
	Funciones de 1 expresion
	Funcciones Unit
	Argumentos nombrados
	Funciones Nothing y To do
	Nombres en Backticks `like this`
Funciones anónimas
	Tipo Funcion
	Jump to Source file
	Retorno de valor implicito
	Argumentos
	it
	Uso de la inferencia de tipos
	Definiendo una función que acepta otra función
	Declarando la función fuera de los paréntesis
	Inline
	Referencia a una función
	Funcion como valor de retorno
Objetos Null
	Objetos explicitamente de tipo Null
	Null safety
		Uso del operador ?
		Uso de la función let
		Uso del operador double-bang !!
Funciones estandar
	apply
	let
	run
	also
	takeIf
Lists & Sets
	getOrElse
	getOrElse
	mutableList
	Operadores de los mutableList
		[]=
		+=
		-=
	forEach
	sets
	toSet, toList, toMutableSet, toMutableList
Maps
    Key to Value
    Pair objects
    Accesor functions
        []
        getValue
        getOrElse
        getOrDefault
    Mutable Maps
    map mutator functions
        =
        +=
        put
        putAll
        getOrPut
        remove
        -
        -=
        clear
Classes
    Visibility and Encapsulation
    getters and setters
    Primary constructors
    Defining properties in a primary constructor
    Secondaries constructors
    Default arguments
    Named arguments
    Initializer block
    Initialization order
    Late initialization
    Lazy initialization
    Subclassing
    is keyword (Type checking)
    as keyword (Type casting)
    object keyword (Singleton classes)
    Object expressions
    companion object (Static members and functions)
    Data classes
        toString
        equals
        copy
        Operator overloading
            +   plus
            +=  plusAssign
            ==  equals
            >   compareTo
            []  get
            ..  rangeTo
            in  contains
Extensions
Java interoperability
Introduction to coroutines